# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: proto/history.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import proto.users_pb2
import proto.groups_pb2
import proto.events_pb2
import proto.history_pb2


class HistoryServiceBase(abc.ABC):

    @abc.abstractmethod
    async def AddHistoryEntry(self, stream: 'grpclib.server.Stream[proto.history_pb2.AddHistoryEntryRequest, proto.history_pb2.AddHistoryEntryResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetFullHistory(self, stream: 'grpclib.server.Stream[proto.history_pb2.GetFullHistoryRequest, proto.history_pb2.GetFullHistoryResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetHistoryFromOffset(self, stream: 'grpclib.server.Stream[proto.history_pb2.GetHistoryFromOffsetRequest, proto.history_pb2.GetHistoryFromOffsetResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/distributed_agenda.HistoryService/AddHistoryEntry': grpclib.const.Handler(
                self.AddHistoryEntry,
                grpclib.const.Cardinality.UNARY_UNARY,
                proto.history_pb2.AddHistoryEntryRequest,
                proto.history_pb2.AddHistoryEntryResponse,
            ),
            '/distributed_agenda.HistoryService/GetFullHistory': grpclib.const.Handler(
                self.GetFullHistory,
                grpclib.const.Cardinality.UNARY_STREAM,
                proto.history_pb2.GetFullHistoryRequest,
                proto.history_pb2.GetFullHistoryResponse,
            ),
            '/distributed_agenda.HistoryService/GetHistoryFromOffset': grpclib.const.Handler(
                self.GetHistoryFromOffset,
                grpclib.const.Cardinality.UNARY_STREAM,
                proto.history_pb2.GetHistoryFromOffsetRequest,
                proto.history_pb2.GetHistoryFromOffsetResponse,
            ),
        }


class HistoryServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AddHistoryEntry = grpclib.client.UnaryUnaryMethod(
            channel,
            '/distributed_agenda.HistoryService/AddHistoryEntry',
            proto.history_pb2.AddHistoryEntryRequest,
            proto.history_pb2.AddHistoryEntryResponse,
        )
        self.GetFullHistory = grpclib.client.UnaryStreamMethod(
            channel,
            '/distributed_agenda.HistoryService/GetFullHistory',
            proto.history_pb2.GetFullHistoryRequest,
            proto.history_pb2.GetFullHistoryResponse,
        )
        self.GetHistoryFromOffset = grpclib.client.UnaryStreamMethod(
            channel,
            '/distributed_agenda.HistoryService/GetHistoryFromOffset',
            proto.history_pb2.GetHistoryFromOffsetRequest,
            proto.history_pb2.GetHistoryFromOffsetResponse,
        )
