syntax="proto3";

import "proto/users.proto";

package distributed_agenda;
option go_package = "./server/proto";

enum UserLevel{
  USER = 0;
  ADMIN = 1;
}

message Group{
  int64 id = 1;
}

message GetGroupRequest{
  int64 id = 1;
}

message CreateGroupRequest{
  Group group = 1;
  repeated string admins = 2;
  repeated string users = 3;
}

message EditGroupRequest{
  Group group = 1;
}

message DeleteGroupRequest{
  int64 id = 1;
}

message GetGroupUsersRequest{
  int64 groupID = 1;
  UserLevel level = 2;
}

message AddUserRequest{
  string userID = 1;
  int64 groupID = 2;
  UserLevel level = 3;
}

message RemoveUserRequest{
  string userID = 1;
  int64 groupID = 2;
  UserLevel level = 3;
}

message GetGroupResponse{
  Group group = 1;
}

message CreateGroupResponse{
  OperationOutcome result = 1;
}

message EditGroupResponse{
  OperationOutcome result = 1;
}

message DeleteGroupResponse{
  OperationOutcome result = 1;
}

message GetGroupUsersResponse{
  User user = 1;
}

message AddUserResponse{
  OperationOutcome result = 1;
}

message RemoveUserResponse{
  OperationOutcome result = 1;
}

service GroupService{

  rpc GetGroup(GetGroupRequest) returns (GetGroupResponse){}

  rpc CreateGroup(CreateGroupRequest) returns (CreateGroupResponse){}

  rpc EditGroup(EditGroupRequest) returns (EditGroupResponse){}

  rpc DeleteGroup(DeleteGroupRequest) returns (DeleteGroupResponse){}

  rpc GetGroupUsers(GetGroupUsersRequest) returns (stream GetGroupUsersResponse) {}

  rpc AddUser(AddUserRequest) returns (AddUserResponse) {}

  rpc RemoveUser(RemoveUserRequest) returns (RemoveUserResponse) {}
}